# Haccess door-node example configuration file
#
# Ben Dooks <ben@hacman.org.uk>

# In this example, we have a door with an RFID reader attached. The
# buttons are only used for a doorbell function. A user presenting
# an authorised ID card will be allowed to open the door.
#
# The door can also be opened by an internal request (mqtt?) and also
# a mode set where the other button (stop) will do the same action as
# an authorised user, and open the door.

[main]

[mqtt]
server=mqtt.hacman.org.uk		;; servername for mqtt
port=1883				;; if set, this is the port to use

[rfid]
poll=200				;; poll time for rfid cards (ms)

[auth]
rfid=true				;; use rfid as auth method
cache=false				;; ask if allowed to cache
authurl=/haccess/node/authmethod        ;; url to ask if card allowed
authhost=controlhost                    ;; host to contact for authurl
cardurl=/haccess/node/cards.txt         ;; url to fetch card list from
cardhost=controlhost                    ;; host to fetch card list from

# build the input nodes (the ones not built automatically)

[input1]
name=mqtt/doorbell_open			;; name to register as
topic=doorbell_open			;; mqtt topic name
default=false				;; default setitng
expires=72000				;; 7200s expiry

[input2]
name=mqtt/door_unlock
topic=door_unlock
default=false

[input3]
name=mqtt/rfid_enable
topic=rfid_enable
default=true

# build the logic intermediate nodes

[logic1]
type=and
name=logic/button_unlock		;; button is enabled
source1=mqtt/doorbell_open		;; doorbell is first dependency
source2=input/opto			;; opto input acts as doorbell

[logic2]
type=and
name=logic/card_unlock			;; used to allow cards to unlock
source1=input/rfid/auth			;; input from rfid auth process
source2=mqtt/rfid_enable		;; input from mqtt

[logic3]
type=or
name=logic/do_open			;; name, this is the input to open
source1=logic/button_unlock		;; button unlock 
source2=logic/card_unlock		;; rfid unlock
source3=input/mqtt_unlock		;; mqtt force unlock
source4=input/button2			;; internal button

[logic4]
type=timer
name=logic/open_timer			;; name for this
source1=logic/do_open			;; input from previous clause
length=50cs				;; length is 50cs

# build the output nodes
[output1]
type=mqtt_out
name=output/lock			;; name of the output node
topic=lock				;; publish changes to this topic
source1=logic/open_timer		;; the open timer

[output2]
type=mqtt_out
name=output/doorbell			;; publish doorbell from here
topic=doorbell
source1=input/opto

# create the dependencies (mostly for logic to standard outputs)

[dependency1]
name=output/opto			;; standard name
input1=logic/open_timer			;; link to the open timer
